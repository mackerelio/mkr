name: Build

permissions:
  contents: write
  id-token: write
  packages: write

on:
  push:
    branches:
      - master
    tags:
      - v*
  pull_request:
env:
  DEBIAN_FRONTEND: noninteractive
jobs:
  lint:
    uses: mackerelio/workflows/.github/workflows/go-lint.yml@7653987676cc233af59a390d142b5cf6e65a526f # v1.6.0
  test:
    uses: mackerelio/workflows/.github/workflows/go-test.yml@7653987676cc233af59a390d142b5cf6e65a526f # v1.6.0
    with:
      pre: |
        echo "GOTOOLCHAIN=auto" >> $GITHUB_ENV
  build:
    needs: [lint, test]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v')
    steps:
      - run: |
          sudo apt-get update
          sudo apt-get install -y \
            rpm devscripts debhelper fakeroot \
            crossbuild-essential-arm64 crossbuild-essential-armhf build-essential
          mkdir -p ~/rpmbuild/{BUILD,BUILDROOT,RPMS,SOURCES,SPECS,SRPMS}
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
      - uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version: 1.24.x
          cache: true
      - run: make all
      - uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
        with:
          name: linux-build-artifacts
          path: |
            ~/rpmbuild/RPMS/*/*.rpm
            packaging/*.deb
            snapshot/*.zip
            snapshot/*.tar.gz
            build/*.tar.gz

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@018cc2cf5baa6db3ef3c5f8a56943fffe632ef53 # v6.0.0
        with:
          name: linux-build-artifacts
          path: artifacts/

      - uses: mackerelio/staging-release-update-action@bc0e3a9f7bd0d890dc044592a798bc307bacc956 # v0.0.1
        if: github.ref == 'refs/heads/master'
        with:
          directory: artifacts/
          github-token: ${{ secrets.GITHUB_TOKEN }}
          tag: staging

      - uses: mackerelio/create-release-action@5af34070474b72efdb3f5057e50d2f3836453c56 # v0.0.4
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          directory: artifacts/
          github-token: ${{ secrets.GITHUB_TOKEN }}
          tag-prefix: "refs/tags/v"
          bump-up-branch-prefix: "bump-version-"

      - name: update homebrew-mackerel-agent
        if: startsWith(github.ref, 'refs/tags/v')
        uses: peter-evans/repository-dispatch@5fc4efd1a4797ddb68ffd0714a238564e4cc0e6f # v4.0.0
        with:
          token: ${{ secrets.MACKERELBOT_GITHUB_TOKEN }}
          event-type: release
          client-payload: '{"product": "mkr"}'
          repository: mackerelio/homebrew-mackerel-agent

      - uses: 8398a7/action-slack@77eaa4f1c608a7d68b38af4e3f739dcd8cba273e # v3.19.0
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,action,eventName,ref,workflow,job,took
          username: mkr-release
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.MACKEREL_SLACK_WEBHOOK_URL }}

  build_images_and_push:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Login to Docker Hub
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3.6.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@00943011d9042930efac3dcd3a170e4273319bc8 # v5.1.0
        with:
          role-to-assume: ${{ secrets.ROLE_TO_ASSUME }}
          role-session-name: "mkr-${{ github.run_id }}-${{ github.run_number }}"
          aws-region: ap-northeast-1
      - name: Login to Public ECR
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3.6.0
        with:
          registry: public.ecr.aws
        env:
          AWS_REGION: us-east-1

      - name: Login to GHCR
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3.6.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get tag
        id: get_tag
        run: echo "::set-output name=tag::${GITHUB_REF##*/}"
      - name: Build and push
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: .
          platforms: |
            linux/amd64
            linux/arm64
          push: true
          tags: |
            mackerel/mkr:latest
            mackerel/mkr:${{ steps.get_tag.outputs.tag }}
            public.ecr.aws/mackerel/mkr:latest
            public.ecr.aws/mackerel/mkr:${{ steps.get_tag.outputs.tag }}
            ghcr.io/${{ github.repository_owner }}/mkr:latest
            ghcr.io/${{ github.repository_owner }}/mkr:${{ steps.get_tag.outputs.tag }}
