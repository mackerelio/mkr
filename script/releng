#!/usr/bin/env perl

=head DESCRIPTION

releng script for mkr
orivinal: https://github.com/mackerelio/mackerel-agent/blob/v0.20.1/tool/releng

=head SYNOPSIS

    % tool/releng

=head DEPENDENCY

`git` command and `hub` or `gh` command are required.

=cut

use 5.014;
use strict;
use warnings;
use utf8;

use Carp;
use ExtUtils::MakeMaker qw/prompt/;

use lib "script/release-tools/releng/lib";
use Releng;
use Releng::Command;
use Releng::Logger;

sub main {
    # check command
    which_git;
    which_hub;

    git "checkout", "master";
    git "pull";

    my $releng = Releng->new;

    my $current_version = $releng->last_release;
    my $next_version    = $releng->decide_next_version($current_version);

    my $branch_name = "bump-version-$next_version";
    infof "checkout new releasing branch [$branch_name]\n";
    git "checkout", "-b", $branch_name;

    infof "bump versions and update readme\n";
    $releng->update_versions($current_version, $next_version);
    git "commit", "-am", "ready for next release. version: $next_version";

    infof "update changelogs\n";
    my @releases = $releng->merged_prs($current_version);
    $releng->update_changelog($next_version, @releases);
    git "commit", "-am", "update changelogs";

    git "diff", "--word-diff", "master..$branch_name";
    my $pr_body = $releng->build_pull_request_body($next_version, @releases);
    say $pr_body;

    if (prompt('push changes?', 'y') !~ /^y(?:es)?$/i ) {
        warnf('releng is aborted. remove the branch [%s] before next releng', $branch_name);
        return;
    }

    infof "push changes\n";
    git "push", "--set-upstream", "origin", $branch_name;
    hub "pull-request", "-m", $pr_body;

    infof "Releasing pull request is created. Review and merge it. You can update changelogs and commit more in this branch before merging.\n";
}

main;
